{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logAnalyticsWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "Create new or use an existing Log Analytic Workspace"
            }
        },
        "logAnalyticsRegion": {
            "type": "string",
            "allowedValues": [
               "East US",
                "West Europe",
                "Southeast Asia",
                "Australia Southeast",
                "West Central US",
                "Japan East",
                "UK South",
                "Central India",
                "Canada Central",
                "East US 2 EUAP",
                "West US 2",
                "Australia Central",
                "Australia East",
                "France Central",
                "Korea Central",
                "North Europe",
                "Central US",
                "East Asia",
                "East US 2",
                "South Central US",
                "North Central US",
                "West US",
                "UK West",
                "South Africa North",
                "Brazil South",
                "Switzerland North",
                "Switzerland West"
            ],
            "metadata": {
                "description": "Specify the Azure Region for your new or existing OMS workspace"
            }
        },
         "automationAccountName": {
            "type": "string",
            "metadata": {
                "description": "Use an existing Automation account or create a new"
            }
        },
        "automationRegion": {
            "type": "string",
            "allowedValues": [
                "Japan East",
                "East US 2",
                "West Europe",
                "South Africa North",
                "UK West",
                "Switzerland North",
                "Southeast Asia",
                "South Central US",
                "North Central US",
                "East Asia",
                "Central US",
                "West US",
                "Australia Central",
                "Australia East",
                "Korea Central",
                "East US",
                "West US 2",
                "Brazil South",
                "Central US EUAP",
                "UK South",
                "West Central US",
                "North Europe",
                "Canada Central",
                "Australia Southeast",
                "Central India",
                "France Central"
            ],
            "metadata": {
                "description": "Specify the Azure Region for your OMS Automation Account"
            }
        },  
        "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    },  
      "ingestSchedulerGuid": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    }
     ,
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Volkanco/AzureDeploy/master/OMSSolutions/azure-cost-analytics",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            }
        }
    },
    "variables": {
        "runbooks": {
            "ingestParentRunbook": {
                "name": "AzureUsageCollector",
                "version": "1.0.0.2",
                "description": "Runbook to collect Azure Usage    into Log Analytics",
                "type": "PowerShell",
                "Id": ""
            }
        },
        "parentRunbookUri": "[concat(parameters('_artifactsLocation'),'/scripts/get-AzureUsage.ps1', parameters('_artifactsLocationSasToken'))]",
        "omsSolutions": {
            "customSolution": {
                "name": "Azure Cost Analytics",
                "solutionName": "[concat('AzureCostAnalytics', '[', parameters('logAnalyticsWorkspaceName'), ']')]",
                "publisher": "volkanc@microsoft.com",
                "displayName": "Azure Cost Analytics",
                "description": "Monitor Azure usage  accross management Groups and subscriptions",
                "author": "volkanc@microsoft.com"
            }
        },
            "AZMONWorkspaceID": "AzureCostAnalytics-AZMON_WS_ID",
        "AZMONWorkspaceIDType": "string",
        "AZMONWorkspaceIDDescription": "Value of the user's Azure Monitor",
        "AZMONWorkspaceKey": "AzureCostAnalytics-AZMON_WS_KEY",
        "AZMONWorkspaceKeyType": "string",
        "AZMONWorkspaceKeyDescription": "Encrypted value of the user's omsWorkspaceKey",
        "createScheduleAutomationAccountName": "AzureCostAnalytics-AzureAutomationAccount-MS-Mgmt",
        "createScheduleAutomationAccountType": "string",
        "createScheduleAutomationAccountDescription": "The name of the Automation Account",
        "createScheduleResourceGroupName": "AzureCostAnalytics-AzureAutomationResourceGroup-MS-Mgmt",
        "createScheduleResourceGroupType": "string",
        "createScheduleResourceGroupDescription": "The name of the resource group",
             "SchedulerFrequency": "Daily",
            "ingestScheduleName": "AzureUsage-Scheduler-Daily",
        "ingestInterval": "1",
        "ingestFrequency": "day",
        "automationSKU": "basic",
        "logAnalyticsSku":"pergb2018",
            "alertArray": [
          ],
          "workbookType":"workbook",
          "workbookSourceId":"Azure Monitor"
    },
    "resources": [
                {
            "name": "[parameters('logAnalyticsWorkspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "location": "[parameters('logAnalyticsRegion')]",
            "properties": {
            },
            "resources":[
               ]            
        },
        {
            "apiversion": "2015-10-31",
            "location": "[parameters('automationRegion')]",
            "name": "[parameters('automationAccountName')]",
            "type": "Microsoft.Automation/automationAccounts",
            "properties": {
                "sku": {
                    "name": "[variables('automationSKU')]"
                }
            },
            "resources": [
                {
                    "name": "[variables('AZMONWorkspaceID')]",
                    "type": "variables",
                    "apiVersion": "2015-10-31",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "description": "[variables('AZMONWorkspaceIDDescription')]",
                        "isEncrypted": 0,
                        "type": "[variables('AZMONWorkspaceIDType')]",
                        "value": "[concat('\"',reference(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName')), '2015-11-01-preview').customerId,'\"')]"
                    }
                },
                {
                    "name": "[variables('AZMONWorkspaceKey')]",
                    "type": "variables",
                    "apiVersion": "2015-10-31",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "description": "[variables('AZMONWorkspaceKeyDescription')]",
                        "isEncrypted": 1,
                        "type": "[variables('AZMONWorkspaceKeyType')]",
                        "value": "[concat('\"',listKeys(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName')), '2015-11-01-preview').primarySharedKey,'\"')]"
                    }
                },
                {
                    "name": "[variables('createScheduleAutomationAccountName')]",
                    "type": "variables",
                    "apiVersion": "2015-10-31",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "description": "[variables('createScheduleAutomationAccountDescription')]",
                        "isEncrypted": 0,
                        "type": "[variables('createScheduleAutomationAccountType')]",
                        "value": "[concat('\"', parameters('automationAccountName'),'\"')]"
                    }
                },
                {
                    "name": "[variables('createScheduleResourceGroupName')]",
                    "type": "variables",
                    "apiVersion": "2015-10-31",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "description": "[variables('createScheduleResourceGroupDescription')]",
                        "isEncrypted": 0,
                        "type": "[variables('createScheduleResourceGroupType')]",
                        "value": "[concat('\"', resourceGroup().name, '\"')]"
                    }
                },
                {
                    "name": "[variables('runbooks').ingestParentRunbook.name]",
                    "type": "runbooks",
                    "apiVersion": "2015-10-31",
                    "location": "[parameters('automationRegion')]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/variables/', variables('AZMONWorkspaceID'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/variables/', variables('AZMONWorkspaceKey'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "runbookType": "[variables('runbooks').ingestParentRunbook.type]",
                        "logProgress": "false",
                        "logVerbose": "false",
                        "description": "[variables('runbooks').ingestParentRunbook.description]",
                        "publishContentLink": {
                            "uri": "[variables('parentRunbookUri')]",
                            "version": "[variables('runbooks').ingestParentRunbook.version]"
                        }
                    }
                },
                {
                    "name": "[concat(parameters('automationAccountName'), '/', variables('ingestscheduleName'))]",
                    "type": "microsoft.automation/automationAccounts/schedules",
                    "apiVersion": "2015-10-31",
                    "location": "[parameters('automationRegion')]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/runbooks/', variables('runbooks').ingestParentRunbook.name)]"
                    ],
                    "tags": {},
                    "properties": {
                        "description": "OMS Azure Storage Runbook Scheduler",
                        "startTime": "15:00",
                        "isEnabled": "true",
                        "interval": "[variables('ingestInterval')]",
                        "frequency": "[variables('ingestFrequency')]"
                    }
                },
                {
                    "name": "[concat(parameters('automationAccountName'), '/',parameters('ingestSchedulerGuid'))]",
                    "type": "microsoft.automation/automationAccounts/jobSchedules",
                    "apiVersion": "2015-10-31",
                    "location": "[parameters('automationRegion')]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/schedules/', variables('ingestscheduleName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/runbooks/', variables('runbooks').ingestParentRunbook.name)]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "schedule": {
                            "name": "[variables('ingestscheduleName')]"
                        },
                        "runbook": {
                            "name": "[variables('Runbooks').ingestParentRunbook.name]"
                        },
                        "parameters": {
                               }
                    }
                }
            ]
        },
        {
            "name": "[variables('omsSolutions').customSolution.solutionName]",
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "location": "[parameters('logAnalyticsRegion')]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/runbooks/', variables('runbooks').ingestParentRunbook.name)]"
            ],
            "plan": {
                "name": "[variables('omsSolutions').customSolution.solutionName]",
                "product": "[variables('omsSolutions').customSolution.name]",
                "publisher": "[variables('omsSolutions').customSolution.publisher]",
                "promotionCode": ""
            },
            "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]",
                "referencedResources": [],
                "containedResources": [
                    "[resourceId('Microsoft.OperationalInsights/workspaces/views/', parameters('logAnalyticsWorkspaceName'), variables('omsSolutions').customSolution.name)]",
                    "[resourceId('Microsoft.Automation/automationAccounts/runbooks/', parameters('automationAccountName'), variables('runbooks').ingestParentRunbook.name)]",
                    "[resourceId('Microsoft.Automation/automationAccounts/variables/', parameters('automationAccountName'), variables('AZMONWorkspaceID'))]",
                    "[resourceId('Microsoft.Automation/automationAccounts/variables/', parameters('automationAccountName'), variables('AZMONWorkspaceKey'))]",
                    "[resourceId('Microsoft.Automation/automationAccounts/variables/', parameters('automationAccountName'), variables('createScheduleAutomationAccountName'))]",
                    "[resourceId('Microsoft.Automation/automationAccounts/variables/', parameters('automationAccountName'), variables('createScheduleResourceGroupName'))]"
                ]
            }
        },
            {
      "name": "[parameters('workbookId')]",
      "type": "microsoft.insights/workbooks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-06-17-preview",
      "dependsOn": [],
      "kind": "shared",
            "properties": {
                "displayName": "Azure Consumption v4",
           "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Cost Analytics\\n---\\n\\n\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{Workspace}\"],\"parameters\":[{\"id\":\"14c296cc-face-4041-8f40-716a05dbe332\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Workspace\",\"type\":5,\"query\":\"where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| summarize by id, name\\r\\n| project id\",\"crossComponentResources\":[\"value::all\"],\"value\":\"/subscriptions/2de20a16-20c6-41af-82cd-bceb39195d1c/resourceGroups/armtest/providers/microsoft.operationalinsights/workspaces/azurecost1\",\"typeSettings\":{\"additionalResourceOptions\":[]},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"191cdc7f-3689-4f79-8f3f-02114bdb2117\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"subscription\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"AzureUsage_CL\\r\\n| where TimeGenerated > ago(30d)\\r\\n| project Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s \\r\\n| where isnotempty(Subscription)\\r\\n| distinct Subscription, SubscriptionName\",\"crossComponentResources\":[\"{Workspace}\"],\"value\":[\"value::all\"],\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.resources/subscriptions\":true},\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\"},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"073783b8-2700-4b6b-b23a-5edefdf72797\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"value\":{\"durationMs\":1209600000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]}},{\"id\":\"5f1933bd-86d2-432e-b796-7487ce0c1c9c\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"timeoffset\",\"type\":1,\"value\":\"4\",\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"condition\":\"else result = '4'\",\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"4\"}}],\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\"},{\"id\":\"5c4bd89c-0681-447d-96b3-70cd2e60673a\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"shownori\",\"type\":1,\"value\":\"0\",\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"condition\":\"else result = '0'\",\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"0\"}}]}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 2\"},{\"type\":1,\"content\":{\"json\":\" Select the workspace  where Azure Usage data is ingested !\\r\\nOnly subscriptions with usage data displayed in subscription selection!\\r\\nPlease note that it might take additional 24H for usage data to be recorded under your subscription!\"},\"name\":\"text - 26\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"c6d7579d-99f1-426b-9f97-363ab604340d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"usagethismonth\",\"type\":1,\"value\":\" AzureUsage_CL   | where TimeGenerated > ago(14d)  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g, SubscriptionName_s, AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL  | where TimeGenerated > ago(14d)  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c     AzureUsage_CL | where TimeGenerated >= startofmonth(now()) and TimeGenerated < startofday(now())  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL | where TimeGenerated >= startofmonth(now()) and TimeGenerated < startofday(now())  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c\",\"criteriaData\":[{\"condition\":\"else result = ' AzureUsage_CL   | where TimeGenerated {TimeRange}  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g, SubscriptionName_s, AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL  | where TimeGenerated {TimeRange}  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c     AzureUsage_CL | where TimeGenerated >= startofmonth(now()) and TimeGenerated < startofday(now())  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL | where TimeGenerated >= startofmonth(now()) and TimeGenerated < startofday(now())  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c'\",\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\" AzureUsage_CL   | where TimeGenerated {TimeRange}  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g, SubscriptionName_s, AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL  | where TimeGenerated {TimeRange}  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c     AzureUsage_CL | where TimeGenerated >= startofmonth(now()) and TimeGenerated < startofday(now())  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL | where TimeGenerated >= startofmonth(now()) and TimeGenerated < startofday(now())  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c\"}}],\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\"},{\"id\":\"349c6340-a21b-48b7-8d25-200a0995ec10\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"usagetimerangeraw\",\"type\":1,\"value\":\" AzureUsage_CL   | where TimeGenerated > ago(14d)  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,SubscriptionName_s,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL  | where TimeGenerated > ago(14d)  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c\",\"criteriaData\":[{\"condition\":\"else result = ' AzureUsage_CL   | where TimeGenerated {TimeRange}  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,SubscriptionName_s,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL  | where TimeGenerated {TimeRange}  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c'\",\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\" AzureUsage_CL   | where TimeGenerated {TimeRange}  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,SubscriptionName_s,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL  | where TimeGenerated {TimeRange}  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c\"}}],\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\"}],\"style\":\"pills\",\"queryType\":0},\"conditionalVisibility\":{\"parameterName\":\"showhidden\",\"comparison\":\"isNotEqualTo\"},\"name\":\"parameters - 39 - Copy\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"c6d7579d-99f1-426b-9f97-363ab604340d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"usagethismonth\",\"type\":1,\"value\":\" AzureUsage_CL   | where TimeGenerated > ago(14d)  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g, SubscriptionName_s, AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL  | where TimeGenerated > ago(14d)  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c     AzureUsage_CL | where TimeGenerated >= startofmonth(now()) and TimeGenerated < startofday(now())  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL | where TimeGenerated >= startofmonth(now()) and TimeGenerated < startofday(now())  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c\",\"criteriaData\":[{\"condition\":\"else result = ' AzureUsage_CL   | where TimeGenerated {TimeRange}  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g, SubscriptionName_s, AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL  | where TimeGenerated {TimeRange}  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c     AzureUsage_CL | where TimeGenerated >= startofmonth(now()) and TimeGenerated < startofday(now())  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL | where TimeGenerated >= startofmonth(now()) and TimeGenerated < startofday(now())  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c'\",\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\" AzureUsage_CL   | where TimeGenerated {TimeRange}  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g, SubscriptionName_s, AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL  | where TimeGenerated {TimeRange}  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c     AzureUsage_CL | where TimeGenerated >= startofmonth(now()) and TimeGenerated < startofday(now())  | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL | where TimeGenerated >= startofmonth(now()) and TimeGenerated < startofday(now())  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c\"}}],\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\"},{\"id\":\"349c6340-a21b-48b7-8d25-200a0995ec10\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"usagetimerangeraw\",\"type\":1,\"value\":\" AzureUsage_CL   | where TimeGenerated > ago(14d) | where SubscriptionGuid_g in ('*') or '*' in ('*') | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,SubscriptionName_s,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL  | where TimeGenerated > ago(14d)  | where SubscriptionGuid_g in ('*') or '*' in ('*')  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c\",\"criteriaData\":[{\"condition\":\"else result = ' AzureUsage_CL   | where TimeGenerated {TimeRange} | where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription}) | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,SubscriptionName_s,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL  | where TimeGenerated {TimeRange}  | where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c'\",\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\" AzureUsage_CL   | where TimeGenerated {TimeRange} | where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription}) | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,SubscriptionName_s,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage | join kind=leftouter (AzureUsage_CL  | where TimeGenerated {TimeRange}  | where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c\"}}],\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\"}],\"style\":\"pills\",\"queryType\":0},\"conditionalVisibility\":{\"parameterName\":\"showhidden\",\"comparison\":\"isNotEqualTo\"},\"name\":\"parameters - 39 - Copy - Copy\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"cellValue\":\"selectedtab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Summary\",\"subTarget\":\"1\",\"style\":\"link\"},{\"cellValue\":\"selectedtab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"UsageTrends\",\"subTarget\":\"2\",\"style\":\"link\"},{\"cellValue\":\"selectedtab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"CostbyRG\",\"subTarget\":\"3\",\"style\":\"link\"},{\"cellValue\":\"selectedtab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"CostbyTag\",\"subTarget\":\"4\",\"style\":\"link\"},{\"cellValue\":\"selectedtab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Compute\",\"subTarget\":\"5\",\"style\":\"link\"}]},\"name\":\"links - 40\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Overall Usage  \\r\\n\\r\\n\"},\"name\":\"text - 18\"},{\"type\":1,\"content\":{\"json\":\"**Usage This Month**    |   **Usage Last Month Same Day** <br>\\r\\n\\r\\n**Total Last Month**\"},\"name\":\"text - 26\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let day=dayofmonth(now());\\r\\nlet start= startofmonth(datetime_add('month',-1,now())) ;\\r\\nlet end =   datetime_add('day',day,start );\\r\\nlet usage = materialize( AzureUsage_CL\\r\\n| where TimeGenerated >= start\\r\\n| where Type_s == \\\"Microsoft.Consumption/usageDetails\\\"\\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated,SubscriptionGuid_g,SubscriptionName_s);\\r\\nusage\\r\\n| where TimeGenerated >= startofmonth(now())\\r\\n| summarize ThisMCost=round(sum(Cost),4)  by  Sub=\\\"Parent\\\"\\r\\n| join kind=leftouter (\\r\\nusage\\r\\n| where TimeGenerated >= start\\r\\n| where TimeGenerated  < end\\r\\n| summarize PrevMSameDayCost=round(sum(Cost),0) by Sub=\\\"Parent\\\"\\r\\n) on Sub\\r\\n| join kind=leftouter (\\r\\nusage\\r\\n| where TimeGenerated >= start\\r\\n| where TimeGenerated  < startofmonth(now())\\r\\n| summarize PrevMTotal=round(sum(Cost),0) by  Sub=\\\"Parent\\\"\\r\\n) on Sub\\r\\n| project  Subscription=\\\"TotaL\\\",ThisMCost, PrevMSameDayCost, PrevMTotal\\r\\n\\r\\n\\r\\n\",\"size\":1,\"title\":\"Overall Usage (Prev Month - Same Day)\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"SubscriptionName\",\"formatter\":1,\"formatOptions\":{}},\"leftContent\":{\"columnMatch\":\"ThisMCost\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"rightContent\":{\"columnMatch\":\"PrevMSameDayCost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},\"secondaryContent\":{\"columnMatch\":\"PrevMTotal\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}},\"showBorder\":false}},\"customWidth\":\"20\",\"name\":\"query - 25 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let day=dayofmonth(now());\\r\\nlet start= startofmonth(datetime_add('month',-1,now())) ;\\r\\nlet end =   datetime_add('day',day,start );\\r\\nlet azusage = materialize(AzureUsage_CL\\r\\n| where TimeGenerated >= start\\r\\n| where Type_s == \\\"Microsoft.Consumption/usageDetails\\\"\\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, SubscriptionGuid_g,SubscriptionName_s, Currency_s);\\r\\nazusage\\r\\n| where TimeGenerated >= startofmonth(now())\\r\\n| summarize ThisMCost=round(sum(Cost),4) by Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s, Currency_s\\r\\n| join kind=leftouter (\\r\\nazusage\\r\\n| where TimeGenerated >= start\\r\\n| where TimeGenerated  < end\\r\\n| summarize PrevMSameDayCost=round(sum(Cost),0) by Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s\\r\\n) on Subscription\\r\\n| join kind=leftouter (\\r\\nazusage\\r\\n| where TimeGenerated >= start\\r\\n| where TimeGenerated  < startofmonth(now())\\r\\n| summarize PrevMTotal=round(sum(Cost),0) by Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s\\r\\n) on Subscription\\r\\n| project  Subscription, SubscriptionName=strcat(Currency_s , ' - ',SubscriptionName ), ThisMCost, PrevMSameDayCost, PrevMTotal \\r\\n\\r\\n\\r\\n\",\"size\":1,\"title\":\"Usage (Prev Month - Same Day) by Subscription\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"SubscriptionName\",\"formatter\":1,\"formatOptions\":{}},\"leftContent\":{\"columnMatch\":\"ThisMCost\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"rightContent\":{\"columnMatch\":\"PrevMSameDayCost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},\"secondaryContent\":{\"columnMatch\":\"PrevMTotal\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}},\"showBorder\":false}},\"customWidth\":\"80\",\"name\":\"query - 25 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AzureUsage_CL\\r\\n| where TimeGenerated >= startofmonth(now())\\r\\n| where Type_s == \\\"Microsoft.Consumption/usageDetails\\\"\\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n//need to exclude last day as its not fully ingested yet\\r\\n| where TimeGenerated < datetime_add('day',-1,startofday(now()))\\r\\n| summarize Cost=round(sum(PretaxCost_d),4)  by  TimeGenerated, SubscriptionGuid_g,SubscriptionName_s \\r\\n| make-series CostTrend=round(sum(Cost),4) default=double(0) on TimeGenerated in range(startofmonth(now()),endofmonth(now()), 1d) by SubscriptionGuid_g,SubscriptionName_s \\r\\n| extend forecast=series_fill_forward(CostTrend,0)\\r\\n| project-away CostTrend\\r\\n| mv-expand forecast to typeof(double), TimeGenerated to typeof(datetime)\\r\\n| order by SubscriptionGuid_g  asc, TimeGenerated asc \\r\\n| extend total=row_cumsum(forecast, SubscriptionGuid_g != prev(SubscriptionGuid_g))\\r\\n\",\"size\":1,\"aggregation\":3,\"title\":\"Usage Forecast\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"areachart\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"SubscriptionName\",\"formatter\":1,\"formatOptions\":{}},\"leftContent\":{\"columnMatch\":\"ThisMCost\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"rightContent\":{\"columnMatch\":\"PrevMSameDayCost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},\"secondaryContent\":{\"columnMatch\":\"PrevMTotal\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}},\"showBorder\":false},\"chartSettings\":{\"yAxis\":[\"total\"],\"group\":\"SubscriptionName_s\",\"createOtherGroup\":null,\"showLegend\":true}},\"name\":\"Forecast\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = \\r\\nAzureUsage_CL\\r\\n| where TimeGenerated {TimeRange}\\r\\n| where Type_s == \\\"Microsoft.Consumption/usageDetails\\\"\\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| extend RG=tostring(split(InstanceId_s,'/')[4])\\r\\n| summarize Usage = round(sum(PretaxCost_d),4) by Subs=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s ;\\r\\nlet links = data\\r\\n| summarize Usage=sum(Usage) by  Subs=strcat('Overall::', Subs)\\r\\n| project SourceId = \\\"Overall\\\", TargetId = Subs, Usage, Kind = 'Overall -> Subs'\\r\\n;\\r\\nlet nodes = data\\r\\n| summarize Usage=sum(Usage) by Subs,RequestId=strcat('Overall::', Subs),SubscriptionName\\r\\n| project Id=RequestId , Name = SubscriptionName, Usage, Kind = 'Subs'\\r\\n| union \\r\\n    (data\\r\\n    | summarize Usage=sum(Usage) \\r\\n    | project Id = \\\"Overall\\\", Name = \\\"Overall\\\", Usage, Kind = 'Overall'\\r\\n       );\\r\\n    nodes\\r\\n| union (links)\\r\\n\\r\\n\\r\\n\",\"size\":2,\"title\":\"Graph - Overall\",\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"graph\",\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"Name\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"centerContent\":{\"columnMatch\":\"Usage\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"bottomContent\":{\"columnMatch\":\"Kind\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"nodeIdField\":\"Id\",\"sourceIdField\":\"SourceId\",\"targetIdField\":\"TargetId\",\"edgeSize\":\"Usage\",\"edgeLabel\":\"Usage\",\"nodeSize\":{\"sizeField\":\"Usage\",\"minSize\":120,\"maxSize\":200},\"staticNodeSize\":100,\"colorSettings\":{\"nodeColorField\":\"Usage\",\"type\":1,\"colorPalette\":\"default\",\"emptyValueColor\":\"gray\"},\"groupByField\":\"Kind\",\"hivesMargin\":5}},\"name\":\"query - 32 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{usagetimerangeraw} \\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| summarize Cost=round(sum(Cost),4) by MeterCategory, Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s\\r\\n| sort by Cost desc\",\"size\":2,\"title\":\"Usage by ConsumedService\",\"exportFieldName\":\"ConsumedService\",\"exportParameterName\":\"ConsumedService\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"graph\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Subscription\",\"formatter\":15,\"formatOptions\":{\"linkTarget\":null}},{\"columnMatch\":\"SubscriptionGuid_g\",\"formatter\":15,\"formatOptions\":{\"linkTarget\":null}}]},\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"ConsumedService\",\"formatter\":1,\"formatOptions\":{}},\"leftContent\":{\"columnMatch\":\"Cost\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":false},\"graphSettings\":{\"type\":2,\"topContent\":{\"columnMatch\":\"MeterCategory\",\"formatter\":1,\"formatOptions\":{}},\"centerContent\":{\"columnMatch\":\"Cost\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"hivesContent\":{\"columnMatch\":\"SubscriptionName\",\"formatter\":1,\"formatOptions\":{}},\"nodeIdField\":\"MeterCategory\",\"nodeSize\":null,\"staticNodeSize\":100,\"colorSettings\":{\"nodeColorField\":\"Cost\",\"type\":4,\"heatmapPalette\":\"greenRed\",\"heatmapMin\":null,\"heatmapMax\":null,\"emptyValueColor\":\"gray\"},\"groupByField\":\"SubscriptionName\",\"hivesMargin\":5}},\"name\":\"query - 11 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let trends=\\r\\n{usagetimerangeraw}\\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| make-series CostTrend=round(sum(Cost),4) default=double(0) on TimeGenerated in range({TimeRange:start},endofday(datetime_add('day',-1,now())), 1d) by MeterCategory; \\r\\n{usagetimerangeraw} \\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| summarize Cost=round(sum(Cost),4) by MeterCategory\\r\\n| join kind= leftouter (trends ) on MeterCategory \\r\\n\\r\\n\\r\\n\",\"size\":0,\"title\":\"Usage Trends -  Select a Service to see details\",\"exportFieldName\":\"MeterCategory\",\"exportParameterName\":\"MeterCategory\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"coldHot\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":1}}},{\"columnMatch\":\"MeterCategory1\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"CostTrend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"Subscription\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"ConsumedService1\",\"formatter\":5,\"formatOptions\":{}}],\"sortBy\":[{\"itemKey\":\"$gen_bar_Cost_1\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"$gen_bar_Cost_1\",\"sortOrder\":2}],\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"ConsumedService\",\"formatter\":1,\"formatOptions\":{}},\"leftContent\":{\"columnMatch\":\"Cost\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":false}},\"customWidth\":\"50\",\"name\":\"query - 11 - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let meter=\\\"{MeterCategory}\\\";\\r\\nlet azusage = materialize({usagetimerangeraw});\\r\\nazusage\\r\\n| where MeterCategory==meter\\r\\n| summarize Cost = round(sum(Cost),4) by Id=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s ,ParentId = ''\\r\\n| extend Kind = 'Usage', Name = strcat('🔑 Sub-', SubscriptionName) \\r\\n| union (\\r\\nazusage\\r\\n| where MeterCategory==meter\\r\\n| summarize Cost = round(sum(Cost),4) by Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s ,ParentId = SubscriptionGuid_g , Id=strcat(SubscriptionGuid_g ,'\\\\\\\\',MeterCategory),MeterCategory\\r\\n| extend Kind = 'Usage', Name = strcat('🧾 MeterCategory-', MeterCategory) ),\\r\\n (\\r\\nazusage\\r\\n| where MeterCategory==meter\\r\\n| summarize Cost = round(sum(Cost),4) by Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s ,ParentId =strcat(SubscriptionGuid_g ,'\\\\\\\\',MeterCategory) , Id=strcat(SubscriptionGuid_g ,'\\\\\\\\',MeterCategory,'\\\\\\\\',MeterSubCategory_s),MeterSubCategory_s\\r\\n| extend Kind = 'Usage', Name = strcat('🧾 SubCategory-', MeterSubCategory_s) ),\\r\\n(azusage\\r\\n| where MeterCategory==meter\\r\\n| summarize Cost = round(sum(Cost),4) by Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s ,ParentId = strcat(SubscriptionGuid_g ,'\\\\\\\\',MeterCategory,'\\\\\\\\',MeterSubCategory_s),MeterCategory, Id=ResourceId, InstanceName=tostring(split(ResourceId,'/')[8])\\r\\n| extend Kind = 'Usage', Name = strcat('🏷 Instance-', InstanceName))\\r\\n| project Name, Kind, Cost,ParentId, Id\\r\\n| order by Cost desc\\r\\n\",\"size\":0,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"green\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":1}}},{\"columnMatch\":\"Id\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"Usage\",\"formatter\":8,\"formatOptions\":{\"palette\":\"yellowOrangeRed\"}}],\"rowLimit\":1000,\"hierarchySettings\":{\"idColumn\":\"Id\",\"parentColumn\":\"ParentId\",\"treeType\":0,\"expanderColumn\":\"Name\",\"expandTopLevel\":true}}},\"customWidth\":\"50\",\"name\":\"query - 30\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedtab\",\"comparison\":\"isEqualTo\",\"value\":\"1\"},\"name\":\"Summary\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Placeholder for group\"},\"name\":\"text - 0\"},{\"type\":1,\"content\":{\"json\":\"## Compute - Virtual  Machines\"},\"name\":\"text - 19\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AzureUsage_CL\\r\\n| where TimeGenerated >= ago(2d)\\r\\n| where ConsumedService_s == \\\"Microsoft.Compute\\\" \\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| extend UsageType = tostring(parse_json(AdditionalInfo_s).UsageType)  \\r\\n| extend VCPUs = tostring(parse_json(AdditionalInfo_s).VCPUs) \\r\\n| extend ServiceType= tostring(parse_json(AdditionalInfo_s).ServiceType) \\r\\n| extend ImageType = tostring(parse_json(AdditionalInfo_s).ImageType) \\r\\n| extend ConsumptionMeter = tostring(parse_json(AdditionalInfo_s).ConsumptionMeter) \\r\\n| where UsageType startswith \\\"ComputeHR\\\"\\r\\n| project PretaxCost_d, InstanceName_s, UsageType, VCPUs, ServiceType, ImageType, Product_s, ConsumptionMeter\\r\\n| where UsageType == \\\"ComputeHR\\\" \\r\\n| extend OS=iff(isempty(ImageType) or ImageType startswith \\\"Windows\\\", \\\"Windows\\\",\\\"Linux\\\") \\r\\n| summarize Count=dcount(InstanceName_s) by OS\",\"size\":0,\"title\":\"OS Distribution\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"piechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Linux\",\"color\":\"yellow\"},{\"seriesName\":\"Windows\",\"color\":\"blue\"}]}},\"customWidth\":\"33\",\"name\":\"query - 28\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"\\r\\nlet timerange=5d;\\r\\n    AzureUsage_CL\\r\\n| where TimeGenerated >= ago(timerange)\\r\\n| where ConsumedService_s == \\\"Microsoft.Compute\\\" \\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| extend ReservationId = tostring(parse_json(AdditionalInfo_s).ReservationId) \\r\\n| extend ReservationOrderId = tostring(parse_json(AdditionalInfo_s).ReservationOrderId)\\r\\n| extend UsageType = tostring(parse_json(AdditionalInfo_s).UsageType)  \\r\\n| extend VCPUs = tostring(parse_json(AdditionalInfo_s).VCPUs) \\r\\n| extend ServiceType= tostring(parse_json(AdditionalInfo_s).ServiceType) \\r\\n| extend ImageType = tostring(parse_json(AdditionalInfo_s).ImageType) \\r\\n| extend ConsumptionMeter = tostring(parse_json(AdditionalInfo_s).ConsumptionMeter) \\r\\n| where UsageType startswith \\\"ComputeHR\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by  InstanceName_s , ServiceType , Product_s \\r\\n| project TimeGenerated , InstanceName_s , ServiceType  \\r\\n| summarize Count=dcount(InstanceName_s) by ServiceType,Category=\\\"Total\\\"\\r\\n| union(\\r\\nAzureUsage_CL\\r\\n| where TimeGenerated >= ago(timerange)\\r\\n| where ConsumedService_s == \\\"Microsoft.Compute\\\" \\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| extend ReservationId = tostring(parse_json(AdditionalInfo_s).ReservationId) \\r\\n| extend ReservationOrderId = tostring(parse_json(AdditionalInfo_s).ReservationOrderId)\\r\\n| extend UsageType = tostring(parse_json(AdditionalInfo_s).UsageType)  \\r\\n| extend VCPUs = tostring(parse_json(AdditionalInfo_s).VCPUs) \\r\\n| extend ServiceType= tostring(parse_json(AdditionalInfo_s).ServiceType) \\r\\n| extend ImageType = tostring(parse_json(AdditionalInfo_s).ImageType) \\r\\n| extend ConsumptionMeter = tostring(parse_json(AdditionalInfo_s).ConsumptionMeter) \\r\\n| where UsageType startswith \\\"ComputeHR\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by  InstanceName_s , ServiceType , Product_s \\r\\n| project TimeGenerated , InstanceName_s , ServiceType  , ReservationId, Product_s , PretaxCost_d , VCPUs  ,MeterId_g\\r\\n| where isnotempty(ReservationId)\\r\\n| summarize Count=dcount(InstanceName_s) by ServiceType,Category=\\\"ReservedInstance\\\")\\r\\n| summarize Count=sum(Count) by Category\\r\\n\\r\\n\",\"size\":0,\"aggregation\":3,\"title\":\"RI Usage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"piechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Total\",\"color\":\"blue\"},{\"seriesName\":\"ReservedInstance\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"query - 28 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AzureUsage_CL\\r\\n| where TimeGenerated >= ago(2d)\\r\\n| where ConsumedService_s == \\\"Microsoft.Compute\\\" \\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n//| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| extend UsageType = tostring(parse_json(AdditionalInfo_s).UsageType)  \\r\\n| extend VCPUs = tostring(parse_json(AdditionalInfo_s).VCPUs) \\r\\n| extend ServiceType= tostring(parse_json(AdditionalInfo_s).ServiceType) \\r\\n| extend ImageType = tostring(parse_json(AdditionalInfo_s).ImageType) \\r\\n| extend ConsumptionMeter = tostring(parse_json(AdditionalInfo_s).ConsumptionMeter) \\r\\n| where UsageType startswith \\\"ComputeHR\\\"\\r\\n| project PretaxCost_d, InstanceName_s, UsageType, VCPUs, ServiceType, ImageType, Product_s, ConsumptionMeter\\r\\n| where UsageType == \\\"ComputeHR\\\" \\r\\n| extend OS=iff(isempty(ImageType) or ImageType startswith \\\"Windows\\\", \\\"Windows\\\",\\\"Linux\\\") \\r\\n| where OS==\\\"Windows\\\"\\r\\n| extend Ahub=iff(ImageType==\\\"Windows Server BYOL\\\", \\\"Ahub\\\",\\\"PayG\\\") \\r\\n| summarize Count=dcount(InstanceName_s) by Ahub\\r\\n\",\"size\":0,\"title\":\"AHUB Usage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"piechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Ahub\",\"color\":\"green\"},{\"seriesName\":\"PayG\",\"color\":\"blue\"}]}},\"customWidth\":\"33\",\"name\":\"query - 28 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let timerange=1d;\\r\\n    AzureUsage_CL\\r\\n| where TimeGenerated >= ago(timerange)\\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| where ConsumedService_s == \\\"Microsoft.Compute\\\" \\r\\n| extend ReservationId = tostring(parse_json(AdditionalInfo_s).ReservationId) \\r\\n| extend ReservationOrderId = tostring(parse_json(AdditionalInfo_s).ReservationOrderId)\\r\\n| extend UsageType = tostring(parse_json(AdditionalInfo_s).UsageType)  \\r\\n| extend VCPUs = tostring(parse_json(AdditionalInfo_s).VCPUs) \\r\\n| extend ServiceType= tostring(parse_json(AdditionalInfo_s).ServiceType) \\r\\n| extend ImageType = tostring(parse_json(AdditionalInfo_s).ImageType) \\r\\n| extend ConsumptionMeter = tostring(parse_json(AdditionalInfo_s).ConsumptionMeter) \\r\\n| where UsageType startswith \\\"ComputeHR\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by  InstanceName_s , ServiceType , Product_s \\r\\n| project TimeGenerated , InstanceName_s , ServiceType  \\r\\n| summarize TotalVMs=dcount(InstanceName_s) by ServiceType\",\"size\":1,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"tiles\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SSH/RDP\",\"formatter\":4,\"formatOptions\":{}},{\"columnMatch\":\"bootcount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"orange\"}},{\"columnMatch\":\"InboundCon\",\"formatter\":8,\"formatOptions\":{}},{\"columnMatch\":\"cpu_p95\",\"formatter\":8,\"formatOptions\":{}},{\"columnMatch\":\"cpu_avg\",\"formatter\":8,\"formatOptions\":{\"palette\":\"hotCold\"}},{\"columnMatch\":\"Nw_Sent\",\"formatter\":8,\"formatOptions\":{\"palette\":\"redGreen\"}},{\"columnMatch\":\"Nw_Rec\",\"formatter\":4,\"formatOptions\":{\"palette\":\"redGreen\"}}]},\"sortBy\":[],\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"ServiceType\",\"formatter\":1,\"formatOptions\":{}},\"leftContent\":{\"columnMatch\":\"TotalVMs\",\"formatter\":8,\"formatOptions\":{\"palette\":\"yellowGreen\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":false}},\"name\":\"query - 19\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"\\r\\nlet timerange=1d;\\r\\n    AzureUsage_CL\\r\\n| where TimeGenerated >= ago(timerange)\\r\\n| where ConsumedService_s == \\\"Microsoft.Compute\\\" \\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| extend ReservationId = tostring(parse_json(AdditionalInfo_s).ReservationId) \\r\\n| extend ReservationOrderId = tostring(parse_json(AdditionalInfo_s).ReservationOrderId)\\r\\n| extend UsageType = tostring(parse_json(AdditionalInfo_s).UsageType)  \\r\\n| extend VCPUs = tostring(parse_json(AdditionalInfo_s).VCPUs) \\r\\n| extend ServiceType= tostring(parse_json(AdditionalInfo_s).ServiceType) \\r\\n| extend ImageType = tostring(parse_json(AdditionalInfo_s).ImageType) \\r\\n| extend ConsumptionMeter = tostring(parse_json(AdditionalInfo_s).ConsumptionMeter) \\r\\n| where UsageType startswith \\\"ComputeHR\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by  InstanceName_s , ServiceType , Product_s \\r\\n| project TimeGenerated , InstanceName_s , ServiceType  \\r\\n| summarize TotalVMs=dcount(InstanceName_s) by ServiceType\\r\\n| join kind= fullouter (\\r\\nAzureUsage_CL\\r\\n| where TimeGenerated >= ago(timerange)\\r\\n| where ConsumedService_s == \\\"Microsoft.Compute\\\" \\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| extend ReservationId = tostring(parse_json(AdditionalInfo_s).ReservationId) \\r\\n| extend ReservationOrderId = tostring(parse_json(AdditionalInfo_s).ReservationOrderId)\\r\\n| extend UsageType = tostring(parse_json(AdditionalInfo_s).UsageType)  \\r\\n| extend VCPUs = tostring(parse_json(AdditionalInfo_s).VCPUs) \\r\\n| extend ServiceType= tostring(parse_json(AdditionalInfo_s).ServiceType) \\r\\n| extend ImageType = tostring(parse_json(AdditionalInfo_s).ImageType) \\r\\n| extend ConsumptionMeter = tostring(parse_json(AdditionalInfo_s).ConsumptionMeter) \\r\\n| where UsageType startswith \\\"ComputeHR\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by  InstanceName_s , ServiceType , Product_s \\r\\n| project TimeGenerated , InstanceName_s , ServiceType  , ReservationId, Product_s , PretaxCost_d , VCPUs  ,MeterId_g\\r\\n| where isnotempty(ReservationId)\\r\\n| summarize VMwithReservation=dcount(InstanceName_s) by ServiceType\\r\\n) on ServiceType\\r\\n|project Family=ServiceType,TotalVMs,VMwithReservation=iff(isempty(VMwithReservation),0,VMwithReservation)\\r\\n\\r\\n\\r\\n\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"unstackedbar\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SSH/RDP\",\"formatter\":4,\"formatOptions\":{}},{\"columnMatch\":\"bootcount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"orange\"}},{\"columnMatch\":\"InboundCon\",\"formatter\":8,\"formatOptions\":{}},{\"columnMatch\":\"cpu_p95\",\"formatter\":8,\"formatOptions\":{}},{\"columnMatch\":\"cpu_avg\",\"formatter\":8,\"formatOptions\":{\"palette\":\"hotCold\"}},{\"columnMatch\":\"Nw_Sent\",\"formatter\":8,\"formatOptions\":{\"palette\":\"redGreen\"}},{\"columnMatch\":\"Nw_Rec\",\"formatter\":4,\"formatOptions\":{\"palette\":\"redGreen\"}}]},\"sortBy\":[],\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"ServiceType\",\"formatter\":1,\"formatOptions\":{}},\"leftContent\":{\"columnMatch\":\"VMCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"yellowGreen\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":false},\"chartSettings\":{\"xAxis\":\"Family\",\"yAxis\":[\"TotalVMs\",\"VMwithReservation\"],\"seriesLabelSettings\":[{\"seriesName\":\"TotalVMs\",\"color\":\"orange\"},{\"seriesName\":\"VMwithReservation\",\"color\":\"blue\"}],\"xSettings\":{},\"ySettings\":{}}},\"name\":\"query - 19 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let timerange=2d;\\r\\n    AzureUsage_CL\\r\\n| where TimeGenerated >= ago(timerange)\\r\\n| where ConsumedService_s == \\\"Microsoft.Compute\\\" \\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| extend ReservationId = tostring(parse_json(AdditionalInfo_s).ReservationId) \\r\\n| extend ReservationOrderId = tostring(parse_json(AdditionalInfo_s).ReservationOrderId)\\r\\n| extend UsageType = tostring(parse_json(AdditionalInfo_s).UsageType)  \\r\\n| extend VCPUs = tostring(parse_json(AdditionalInfo_s).VCPUs) \\r\\n| extend ServiceType= tostring(parse_json(AdditionalInfo_s).ServiceType) \\r\\n| extend ImageType = tostring(parse_json(AdditionalInfo_s).ImageType) \\r\\n| extend ConsumptionMeter = tostring(parse_json(AdditionalInfo_s).ConsumptionMeter) \\r\\n| where UsageType startswith \\\"ComputeHR\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by  InstanceName_s , ServiceType , Product_s , Location=InstanceLocation_s\\r\\n| project TimeGenerated , InstanceName_s , ServiceType  ,Location\\r\\n| summarize TotalVMs=dcount(InstanceName_s) by ServiceType,Location\\r\\n| join kind= fullouter (\\r\\nAzureUsage_CL\\r\\n| where TimeGenerated >= ago(timerange)\\r\\n| where ConsumedService_s == \\\"Microsoft.Compute\\\" \\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| extend ReservationId = tostring(parse_json(AdditionalInfo_s).ReservationId) \\r\\n| extend ReservationOrderId = tostring(parse_json(AdditionalInfo_s).ReservationOrderId)\\r\\n| extend UsageType = tostring(parse_json(AdditionalInfo_s).UsageType)  \\r\\n| extend VCPUs = tostring(parse_json(AdditionalInfo_s).VCPUs) \\r\\n| extend ServiceType= tostring(parse_json(AdditionalInfo_s).ServiceType) \\r\\n| extend ImageType = tostring(parse_json(AdditionalInfo_s).ImageType) \\r\\n| extend ConsumptionMeter = tostring(parse_json(AdditionalInfo_s).ConsumptionMeter) \\r\\n| where UsageType startswith \\\"ComputeHR\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by  InstanceName_s , ServiceType , Product_s \\r\\n| project TimeGenerated , InstanceName_s , ServiceType  , ReservationId, Product_s , PretaxCost_d , VCPUs  ,MeterId_g\\r\\n| where isnotempty(ReservationId)\\r\\n| summarize VMwithReservation=dcount(InstanceName_s) by ServiceType\\r\\n) on ServiceType\\r\\n|project Family=ServiceType,TotalVMs,VMwithReservation=iff(isempty(VMwithReservation),0,VMwithReservation),Location\\r\\n| extend VMWithoutReservation=TotalVMs-VMwithReservation\\r\\n| where VMWithoutReservation <> 0\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":4,\"title\":\"VMs without Reservation\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"tiles\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SSH/RDP\",\"formatter\":4,\"formatOptions\":{}},{\"columnMatch\":\"bootcount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"orange\"}},{\"columnMatch\":\"InboundCon\",\"formatter\":8,\"formatOptions\":{}},{\"columnMatch\":\"cpu_p95\",\"formatter\":8,\"formatOptions\":{}},{\"columnMatch\":\"cpu_avg\",\"formatter\":8,\"formatOptions\":{\"palette\":\"hotCold\"}},{\"columnMatch\":\"Nw_Sent\",\"formatter\":8,\"formatOptions\":{\"palette\":\"redGreen\"}},{\"columnMatch\":\"Nw_Rec\",\"formatter\":4,\"formatOptions\":{\"palette\":\"redGreen\"}}]},\"sortBy\":[],\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Family\",\"formatter\":1,\"formatOptions\":{}},\"leftContent\":{\"columnMatch\":\"VMWithoutReservation\",\"formatter\":8,\"formatOptions\":{\"palette\":\"yellowGreen\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"secondaryContent\":{\"columnMatch\":\"Location\",\"formatOptions\":{}},\"showBorder\":false},\"chartSettings\":{\"xAxis\":\"Family\",\"yAxis\":[\"TotalVMs\",\"VMwithReservation\"],\"seriesLabelSettings\":[{\"seriesName\":\"TotalVMs\",\"color\":\"orange\"},{\"seriesName\":\"VMwithReservation\",\"color\":\"blue\"}],\"xSettings\":{},\"ySettings\":{}}},\"name\":\"query - 19 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"    AzureUsage_CL\\r\\n| where TimeGenerated {TimeRange}\\r\\n| where ConsumedService_s == \\\"Microsoft.Compute\\\" \\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| extend ReservationId = tostring(parse_json(AdditionalInfo_s).ReservationId) \\r\\n| extend ReservationOrderId = tostring(parse_json(AdditionalInfo_s).ReservationOrderId)\\r\\n| extend UsageType = tostring(parse_json(AdditionalInfo_s).UsageType)  \\r\\n| extend VCPUs = tostring(parse_json(AdditionalInfo_s).VCPUs) \\r\\n| extend ServiceType= tostring(parse_json(AdditionalInfo_s).ServiceType) \\r\\n| extend ImageType = tostring(parse_json(AdditionalInfo_s).ImageType) \\r\\n| extend ConsumptionMeter = tostring(parse_json(AdditionalInfo_s).ConsumptionMeter) \\r\\n| extend OS=iff(isempty(ImageType) or ImageType startswith \\\"Windows\\\", \\\"Windows\\\",\\\"Linux\\\") \\r\\n| extend Ahub=iff(OS == \\\"Windows\\\" and ImageType==\\\"Windows Server BYOL\\\", \\\"Ahub\\\",iff(OS == \\\"Windows\\\", \\\"PayG\\\",\\\"N/A\\\")) \\r\\n| where UsageType startswith \\\"ComputeHR\\\"\\r\\n| summarize Cost=round(sum(PretaxCost_d),4)  by ResourceId=InstanceId_s, InstanceName_s , ServiceType , Product_s , SubscriptionName_s,OS, Ahub\\r\\n| where Product_s <> \\\"VM RI - Compute\\\" \\r\\n| join kind= leftouter (\\r\\n        AzureUsage_CL\\r\\n| where TimeGenerated {TimeRange}\\r\\n| where ConsumedService_s == \\\"Microsoft.Compute\\\" \\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| extend ReservationId = tostring(parse_json(AdditionalInfo_s).ReservationId) \\r\\n| extend ReservationOrderId = tostring(parse_json(AdditionalInfo_s).ReservationOrderId)\\r\\n| extend UsageType = tostring(parse_json(AdditionalInfo_s).UsageType)  \\r\\n| extend VCPUs = tostring(parse_json(AdditionalInfo_s).VCPUs) \\r\\n| extend ServiceType= tostring(parse_json(AdditionalInfo_s).ServiceType) \\r\\n| extend ImageType = tostring(parse_json(AdditionalInfo_s).ImageType) \\r\\n| extend ConsumptionMeter = tostring(parse_json(AdditionalInfo_s).ConsumptionMeter) \\r\\n| where UsageType startswith \\\"ComputeHR\\\"\\r\\n| summarize Cost=round(sum(PretaxCost_d),4)  by ResourceId=InstanceId_s, InstanceName_s , ServiceType , Product_s , SubscriptionName_s\\r\\n| where Product_s == \\\"VM RI - Compute\\\" \\r\\n) on ResourceId\\r\\n|project ResourceId , InstanceName=InstanceName_s , ServiceType , Product=Product_s ,Cost, isRI=iff(Product_s1==\\\"VM RI - Compute\\\" , \\\"RI\\\" , \\\"No RI\\\"), SubscriptionName=SubscriptionName_s,OS, Ahub\\r\\n| where iff({shownori}==1,isRI==\\\"No RI\\\",1==1)\\r\\n\",\"size\":0,\"title\":\"VM Cost for Selected Time \",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ResourceId\",\"formatter\":13,\"formatOptions\":{\"linkTarget\":null,\"showIcon\":true}},{\"columnMatch\":\"InstanceName\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"Cost\",\"formatter\":8,\"formatOptions\":{\"palette\":\"greenRed\"}},{\"columnMatch\":\"InstanceName_s\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"SSH/RDP\",\"formatter\":4,\"formatOptions\":{}},{\"columnMatch\":\"bootcount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"orange\"}},{\"columnMatch\":\"InboundCon\",\"formatter\":8,\"formatOptions\":{}},{\"columnMatch\":\"cpu_p95\",\"formatter\":8,\"formatOptions\":{}},{\"columnMatch\":\"cpu_avg\",\"formatter\":8,\"formatOptions\":{\"palette\":\"hotCold\"}},{\"columnMatch\":\"Nw_Sent\",\"formatter\":8,\"formatOptions\":{\"palette\":\"redGreen\"}},{\"columnMatch\":\"Nw_Rec\",\"formatter\":4,\"formatOptions\":{\"palette\":\"redGreen\"}}],\"sortBy\":[{\"itemKey\":\"$gen_heatmap_Cost_4\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"$gen_heatmap_Cost_4\",\"sortOrder\":2}],\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"ServiceType\",\"formatter\":1,\"formatOptions\":{}},\"leftContent\":{\"columnMatch\":\"VMCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"yellowGreen\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":false},\"chartSettings\":{\"xAxis\":\"Family\",\"yAxis\":[\"TotalVMs\",\"VMwithReservation\"],\"seriesLabelSettings\":[{\"seriesName\":\"TotalVMs\",\"color\":\"orange\"},{\"seriesName\":\"VMwithReservation\",\"color\":\"blue\"}],\"xSettings\":{},\"ySettings\":{}}},\"name\":\"query - 19 - Copy - Copy - Copy\"},{\"type\":1,\"content\":{\"json\":\"## VM Counts from Usage ( Last Day )\"},\"name\":\"text - 30\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedtab\",\"comparison\":\"isEqualTo\",\"value\":\"5\"},\"name\":\"Compute\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Cost by Resource Group \",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{Workspace}\"],\"parameters\":[{\"id\":\"3769dd29-6375-4a4e-a45b-ab491366f350\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"subforgraph\",\"type\":2,\"query\":\"AzureUsage_CL\\r\\n| where TimeGenerated > ago(30d)\\r\\n| project Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s \\r\\n| where isnotempty(Subscription)\\r\\n| distinct Subscription, SubscriptionName\",\"crossComponentResources\":[\"{Workspace}\"],\"value\":\"23321833-2fdd-4cb1-8a8a-18e69ab694fd\",\"typeSettings\":{\"additionalResourceOptions\":[]},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 35\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"\\r\\nlet subfilter= \\\"{subforgraph}\\\";\\r\\nlet data = \\r\\nAzureUsage_CL\\r\\n| where TimeGenerated {TimeRange}\\r\\n| where Type_s == \\\"Microsoft.Consumption/usageDetails\\\"\\r\\n|where SubscriptionGuid_g == subfilter\\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| extend RG=tostring(split(InstanceId_s,'/')[4])\\r\\n| summarize Usage = round(sum(PretaxCost_d),4) by Subs=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s\\r\\n| extend RequestId = strcat('Overall::', Subs)\\r\\n|union ( \\r\\nAzureUsage_CL\\r\\n| where TimeGenerated {TimeRange}\\r\\n| where Type_s == \\\"Microsoft.Consumption/usageDetails\\\"\\r\\n| where SubscriptionGuid_g ==  subfilter\\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| extend RG=tostring(split(InstanceId_s,'/')[4])\\r\\n| summarize Usage = round(sum(PretaxCost_d),4) by Subs=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s ,RG\\r\\n| extend RequestId = strcat(Subs, '::', RG)\\r\\n| top 10 by Usage\\r\\n);\\r\\nlet links = data\\r\\n| where RequestId !startswith \\\"Overall::\\\"\\r\\n| summarize Usage=sum(Usage) by Subs=strcat('Overall::', Subs),  RequestId\\r\\n| project SourceId = Subs, TargetId = RequestId, Usage, Kind = 'Subs -> RG'\\r\\n| union (data\\r\\n| summarize Usage=sum(Usage) by  Subs=strcat('Overall::', Subs)\\r\\n| project SourceId = \\\"Overall\\\", TargetId = Subs, Usage, Kind = 'Overall -> Subs')\\r\\n;\\r\\nlet nodes = data\\r\\n| where RequestId !startswith \\\"Overall::\\\"\\r\\n| summarize Usage=sum(Usage) by Subs,RequestId=strcat('Overall::', Subs),SubscriptionName\\r\\n| project Id=RequestId , Name = SubscriptionName, Usage, Kind = 'Top10 RG'\\r\\n| union (data\\r\\n| where RequestId !startswith \\\"Overall::\\\"\\r\\n    | summarize Usage=sum(Usage) by RequestId, RG\\r\\n    | project Id = RequestId, Name = RG, Usage, Kind = 'RG'),\\r\\n    (data\\r\\n    | where RequestId startswith \\\"Overall::\\\"\\r\\n    | summarize Usage=sum(Usage) \\r\\n    | project Id = \\\"Overall\\\", Name = \\\"Subs Total\\\", Usage, Kind = 'Overall'\\r\\n       );\\r\\n    nodes\\r\\n| union (links)\\r\\n\\r\\n\\r\\n\",\"size\":2,\"title\":\"Top 10 RGs by Usage\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"graph\",\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"Name\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"centerContent\":{\"columnMatch\":\"Usage\",\"formatter\":12,\"formatOptions\":{},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"bottomContent\":{\"columnMatch\":\"Kind\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"nodeIdField\":\"Id\",\"sourceIdField\":\"SourceId\",\"targetIdField\":\"TargetId\",\"edgeSize\":\"Usage\",\"nodeSize\":null,\"staticNodeSize\":100,\"colorSettings\":{\"nodeColorField\":\"Kind\",\"type\":1,\"colorPalette\":\"default\"},\"hivesMargin\":5}},\"name\":\"query - 32 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let subfilter= \\\"{subforgraph}\\\";\\r\\nlet azusage = materialize(AzureUsage_CL \\r\\n| where TimeGenerated {TimeRange} \\r\\n|where SubscriptionGuid_g == subfilter\\r\\n| where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" \\r\\n| summarize arg_max(PretaxCost_d, *) by TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s, InstanceLocation_s \\r\\n| summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s, InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s \\r\\n| project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,SubscriptionName_s,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage \\r\\n| join kind=leftouter \\r\\n(AzureUsage_CL \\r\\n| where TimeGenerated {TimeRange}\\r\\n| where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g \\r\\n| extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c);\\r\\nazusage\\r\\n| summarize Cost = round(sum(Cost),4) by Id=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s ,ParentId = '',Currency_s\\r\\n| extend Kind = 'Usage', Name = strcat('🔑 Sub-', SubscriptionName,' - ',Currency_s ) \\r\\n| union (\\r\\nazusage\\r\\n| extend RG=tostring(split(ResourceId,'/')[4])\\r\\n| summarize Cost = round(sum(Cost),4) by Subscription=SubscriptionGuid_g ,ParentId = SubscriptionGuid_g , Id=strcat(SubscriptionGuid_g ,'\\\\\\\\',RG),RG\\r\\n| extend Kind = 'Usage', Name = strcat('🗃 RG-', RG) ),\\r\\n (\\r\\nazusage\\r\\n| extend RG=tostring(split(ResourceId,'/')[4])\\r\\n| extend ResourceName=tostring(split(ResourceId,'/')[8])\\r\\n| summarize Cost = round(sum(Cost),4) by Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s ,ParentId =strcat(SubscriptionGuid_g ,'\\\\\\\\',RG) , Id=ResourceId,ResourceName\\r\\n| extend Kind = 'Usage', Name = strcat('🏷 Resource-', ResourceName) )\\r\\n| project Name, Kind, Cost,ParentId, Id,RG\\r\\n| order by Cost desc\",\"size\":0,\"title\":\" Select a  RG to See the details\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"RG\",\"exportParameterName\":\"RG\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"coldHot\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":1}}},{\"columnMatch\":\"ParentId\",\"formatter\":5},{\"columnMatch\":\"Id\",\"formatter\":5},{\"columnMatch\":\"RG\",\"formatter\":5}],\"rowLimit\":800,\"hierarchySettings\":{\"idColumn\":\"Id\",\"parentColumn\":\"ParentId\",\"treeType\":0,\"expanderColumn\":\"Name\",\"expandTopLevel\":true}}},\"name\":\"query - 2\"},{\"type\":1,\"content\":{\"json\":\"## Selected Resource Group : {RG}\"},\"name\":\"text - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let subfilter= \\\"{subforgraph}\\\";\\r\\nlet azusage = materialize(AzureUsage_CL \\r\\n| where TimeGenerated {TimeRange} \\r\\n|where SubscriptionGuid_g == subfilter\\r\\n| extend RG=tostring(split(InstanceId_s,'/')[4])\\r\\n| where RG==\\\"{RG}\\\"\\r\\n| where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" \\r\\n| summarize arg_max(PretaxCost_d, *) by TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s, InstanceLocation_s \\r\\n| summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s, InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s \\r\\n| project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,SubscriptionName_s,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage \\r\\n| join kind=leftouter \\r\\n(AzureUsage_CL \\r\\n| where TimeGenerated {TimeRange}\\r\\n| where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g \\r\\n| extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c);\\r\\nlet trends=azusage\\r\\n| make-series CostTrend=round(sum(Cost),4) default=double(0) on TimeGenerated in range({TimeRange:start},endofday(datetime_add('day',-1,now())), 1d) by MeterCategory; \\r\\nazusage\\r\\n| summarize Cost=round(sum(Cost),4) by MeterCategory\\r\\n| join kind= leftouter (trends ) on MeterCategory \\r\\n\\r\\n\\r\\n\",\"size\":0,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"yellowOrangeRed\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":1}}},{\"columnMatch\":\"MeterCategory1\",\"formatter\":5},{\"columnMatch\":\"CostTrend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}],\"sortBy\":[{\"itemKey\":\"$gen_bar_Cost_1\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"$gen_bar_Cost_1\",\"sortOrder\":2}]},\"customWidth\":\"50\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let subfilter= \\\"{subforgraph}\\\";\\r\\nlet azusage = materialize(AzureUsage_CL \\r\\n| where TimeGenerated {TimeRange} \\r\\n|where SubscriptionGuid_g == subfilter\\r\\n| extend RG=tostring(split(InstanceId_s,'/')[4])\\r\\n| where RG==\\\"{RG}\\\"\\r\\n| where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" \\r\\n| summarize arg_max(PretaxCost_d, *) by TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s, InstanceLocation_s \\r\\n| summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s, InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s \\r\\n| project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,SubscriptionName_s,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage \\r\\n| join kind=leftouter \\r\\n(AzureUsage_CL \\r\\n| where TimeGenerated {TimeRange}\\r\\n| where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" | summarize c=count() by MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g \\r\\n| extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0])) | project-away MeterId_g1, c);\\r\\nlet trends=azusage\\r\\n| make-series CostTrend=round(sum(Cost),4) default=double(0) on TimeGenerated in range({TimeRange:start},endofday(datetime_add('day',-1,now())), 1d) by ResourceId; \\r\\nazusage\\r\\n| summarize Cost=round(sum(Cost),4) by ResourceId\\r\\n| join kind= leftouter (trends ) on ResourceId \\r\\n| order by Cost desc\\r\\n\\r\\n\\r\\n\",\"size\":0,\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"yellowOrangeRed\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":1}}},{\"columnMatch\":\"MeterCategory1\",\"formatter\":5},{\"columnMatch\":\"CostTrend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}]}},\"customWidth\":\"50\",\"name\":\"query - 3 - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedtab\",\"comparison\":\"isEqualTo\",\"value\":\"3\"},\"name\":\"CostbyRG\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{Workspace}\"],\"parameters\":[{\"id\":\"39f5685e-c218-48d8-9cdc-929c53e0cfab\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Tag\",\"type\":2,\"query\":\"AzureUsage_CL\\r\\n| where TimeGenerated {TimeRange}\\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| where isnotempty(Tags_s)\\r\\n| mv-expand Tags=todynamic(Tags_s)\\r\\n| project Tags\\r\\n| extend keys=bag_keys(Tags)\\r\\n | project Tag=tostring(['keys'][0])\\r\\n | distinct Tag\\r\\n | sort by ['Tag'] asc \",\"crossComponentResources\":[\"{Workspace}\"],\"value\":\"Department\",\"typeSettings\":{\"additionalResourceOptions\":[]},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"a35c62e6-88aa-496f-ae1b-0c3c152697ab\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TagValue\",\"type\":2,\"query\":\"let selected=\\\"{Tag}\\\";\\r\\nAzureUsage_CL\\r\\n| where TimeGenerated {TimeRange}\\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| where isnotempty(Tags_s)\\r\\n| mv-expand Tags=todynamic(Tags_s)\\r\\n| where isnotempty(Tags.[selected])\\r\\n| project tagsel=tostring(Tags.[selected])\\r\\n| distinct tagsel\\r\\n| sort by tagsel asc \\r\\n\",\"crossComponentResources\":[\"{Workspace}\"],\"value\":null,\"typeSettings\":{\"additionalResourceOptions\":[]},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 37\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let tagkey = \\\"{Tag}\\\";\\r\\nlet data = AzureUsage_CL\\r\\n//| where TimeGenerated {TimeRange}\\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| where isnotempty(Tags_s)\\r\\n| mv-expand Tags=todynamic(Tags_s)\\r\\n| extend keys=tostring(bag_keys(Tags)[0])\\r\\n| where keys==tagkey\\r\\n| extend TagValue=tostring(Tags.[tagkey])\\r\\n| summarize Usage = round(sum(PretaxCost_d),4) by Subs=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s ,tostring(Tags),TagValue\\r\\n| extend RequestId = strcat(Subs, '::', Tags);\\r\\nlet nodes = data\\r\\n| where RequestId !startswith \\\"Overall::\\\"\\r\\n    | summarize Usage=sum(Usage) by SubscriptionName,RequestId, TagValue\\r\\n    | project Id = RequestId, Name = TagValue, Usage, Kind = 'Tags', Sub=SubscriptionName;\\r\\n    nodes\\r\\n    | sort by Usage asc\\r\\n\",\"size\":2,\"title\":\"Graph - Sub to tagkey\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"graph\",\"graphSettings\":{\"type\":2,\"topContent\":{\"columnMatch\":\"Name\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"centerContent\":{\"columnMatch\":\"Usage\",\"formatter\":12,\"formatOptions\":{},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"bottomContent\":{\"columnMatch\":\"Sub\",\"formatter\":1,\"formatOptions\":{}},\"hivesContent\":{\"columnMatch\":\"Kind\",\"formatter\":1,\"formatOptions\":{}},\"nodeIdField\":\"Id\",\"sourceIdField\":\"SourceId\",\"targetIdField\":\"TargetId\",\"edgeSize\":\"Usage\",\"nodeSize\":{\"sizeField\":\"Usage\",\"minSize\":100,\"maxSize\":130},\"staticNodeSize\":100,\"colorSettings\":{\"nodeColorField\":\"Usage\",\"type\":4,\"heatmapPalette\":\"greenRed\",\"heatmapMin\":null,\"heatmapMax\":null,\"emptyValueColor\":\"gray\"},\"groupByField\":\"Kind\",\"hivesMargin\":5}},\"name\":\"query - 32 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let tagkey = \\\"{Tag}\\\";\\r\\nlet  tagvalue=\\\"{TagValue}\\\";\\r\\nlet data = AzureUsage_CL\\r\\n| where TimeGenerated {TimeRange}\\r\\n| where Type_s == \\\"Microsoft.Consumption/usageDetails\\\"\\r\\n//| where SubscriptionGuid_g ==  subfilter\\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| where isnotempty(Tags_s)\\r\\n| mv-expand Tags=todynamic(Tags_s)\\r\\n| extend keys=tostring(bag_keys(Tags)[0])\\r\\n| where keys==tagkey\\r\\n| extend keys=tostring(bag_keys(Tags)[0])\\r\\n| extend TagValue=tostring(Tags.[tagkey])\\r\\n| where isnotempty(Tags.[tagkey])\\r\\n| where Tags.[tagkey]==tagvalue\\r\\n| summarize Usage = round(sum(PretaxCost_d),4) by Subs=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s ,tostring(Tags), TagValue,ResourceId=InstanceId_s , ResName=InstanceName_s\\r\\n| extend RequestId = strcat(Subs, '::', Tags);\\r\\nlet links = data\\r\\n| where RequestId !startswith \\\"Overall::\\\"\\r\\n| summarize Usage=sum(Usage) by Subs=strcat('Overall::', Subs),  RequestId\\r\\n| project SourceId = Subs, TargetId = RequestId, Usage, Kind = 'Subs -> Tags'\\r\\n| union (data\\r\\n| summarize Usage=sum(Usage) by  Subs=strcat('Overall::', Subs)\\r\\n| project SourceId = \\\"Overall\\\", TargetId = Subs, Usage, Kind = 'Overall -> Subs'),\\r\\n(data\\r\\n| where RequestId !startswith \\\"Overall::\\\"\\r\\n| summarize Usage=sum(Usage) by   RequestId , ResourceId\\r\\n| project SourceId = RequestId, TargetId = ResourceId, Usage, Kind = 'Tags -> Res')\\r\\n;\\r\\nlet nodes = data\\r\\n| where RequestId !startswith \\\"Overall::\\\"\\r\\n| summarize Usage=sum(Usage) by Subs,RequestId=strcat('Overall::', Subs),SubscriptionName\\r\\n| project Id=RequestId , Name = SubscriptionName, Usage, Kind = 'Subs'\\r\\n| union (data\\r\\n| where RequestId !startswith \\\"Overall::\\\"\\r\\n    | summarize Usage=sum(Usage) by RequestId, Tags,TagValue\\r\\n    | project Id = RequestId, Name = TagValue, Usage, Kind = 'Tags'),\\r\\n    (data\\r\\n    | summarize Usage=sum(Usage) \\r\\n    | project Id = \\\"Overall\\\", Name = \\\"Subs Total\\\", Usage, Kind = 'Overall'\\r\\n       ),\\r\\n       (data\\r\\n    | summarize Usage=sum(Usage) by RequestId, ResourceId , ResName\\r\\n    | project Id = ResourceId, Name = ResName, Usage, Kind = 'Resource');\\r\\n    nodes\\r\\n| union (links)\\r\\n\",\"size\":2,\"title\":\"Graph - Sub to tagvalue\",\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"graph\",\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"Name\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"centerContent\":{\"columnMatch\":\"Usage\",\"formatter\":12,\"formatOptions\":{},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"bottomContent\":{\"columnMatch\":\"Kind\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"nodeIdField\":\"Id\",\"sourceIdField\":\"SourceId\",\"targetIdField\":\"TargetId\",\"edgeSize\":\"Usage\",\"nodeSize\":{\"sizeField\":\"Usage\",\"minSize\":100,\"maxSize\":130},\"staticNodeSize\":100,\"colorSettings\":{\"nodeColorField\":\"Kind\",\"type\":1,\"colorPalette\":\"default\"},\"hivesMargin\":5}},\"conditionalVisibility\":{\"parameterName\":\"TagValue\",\"comparison\":\"isNotEqualTo\"},\"name\":\"query - 32 - Copy - Copy - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedtab\",\"comparison\":\"isEqualTo\",\"value\":\"4\"},\"name\":\"CostbyTag\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Usage Trends\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let day=dayofmonth(now());\\r\\nlet start= startofmonth(datetime_add('month',-1,now())) ;\\r\\nlet end =   datetime_add('day',day,start );\\r\\nlet azusage = materialize(AzureUsage_CL\\r\\n| where TimeGenerated >= start\\r\\n| where Type_s == \\\"Microsoft.Consumption/usageDetails\\\"\\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s\\r\\n| project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,SubscriptionGuid_g,SubscriptionName_s,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage\\r\\n| join kind=leftouter (AzureUsage_CL\\r\\n| where TimeGenerated >= start \\r\\n| where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\"\\r\\n| summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g\\r\\n| extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0]))\\r\\n| project-away MeterId_g1, c);\\r\\nazusage\\r\\n| where TimeGenerated >= startofmonth(now())\\r\\n| summarize ThisMCost=round(sum(Cost),4) by Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s, MeterCategory\\r\\n| join kind=leftouter (\\r\\nazusage\\r\\n| where TimeGenerated >= start\\r\\n| where TimeGenerated  < end\\r\\n| summarize PrevMSameDayCost=round(sum(Cost),0) by Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s, MeterCategory\\r\\n) on Subscription , MeterCategory\\r\\n| join kind=leftouter (\\r\\nazusage\\r\\n| where TimeGenerated >= start\\r\\n| where TimeGenerated  < startofmonth(now())\\r\\n| summarize PrevMTotal=round(sum(Cost),0) by Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s,MeterCategory\\r\\n) on Subscription , MeterCategory\\r\\n| project  Subscription, SubscriptionName ,MeterCategory, ThisMCost, PrevMSameDayCost, PrevMTotal\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":0,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"unstackedbar\",\"chartSettings\":{\"xAxis\":\"MeterCategory\",\"yAxis\":[\"PrevMSameDayCost\",\"PrevMTotal\",\"ThisMCost\"],\"seriesLabelSettings\":[{\"seriesName\":\"PrevMSameDayCost\",\"color\":\"yellow\"},{\"seriesName\":\"PrevMTotal\",\"color\":\"red\"},{\"seriesName\":\"ThisMCost\",\"color\":\"blue\"}]}},\"name\":\"query - 1\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"9584d2e0-405d-4afe-be9e-10f99b376a08\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ComparisionPeriod\",\"type\":2,\"typeSettings\":{\"additionalResourceOptions\":[]},\"jsonData\":\"[\\r\\n    { \\\"value\\\":\\\"Day over Day\\\", \\\"label\\\":\\\"DoD\\\", \\\"selected\\\": true },\\r\\n    { \\\"value\\\":\\\"Week over Week\\\", \\\"label\\\":\\\"WoW\\\", \\\"selected\\\": false },\\r\\n    { \\\"value\\\":\\\"Month Over Month\\\", \\\"label\\\":\\\"MoM\\\", \\\"selected\\\": false }\\r\\n]\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"resourceType\":\"microsoft.insights/components\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 2\"},{\"type\":1,\"content\":{\"json\":\"# Cost Difference {ComparisionPeriod} \"},\"name\":\"text - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AzureUsage_CL\\r\\n| where TimeGenerated {TimeRange}\\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| summarize Cost=round(sum(PretaxCost_d),4) by Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s, TimeGenerated \\r\\n| sort by Subscription, SubscriptionName, TimeGenerated asc\\r\\n| serialize\\r\\n|  extend  p_cost = iff(Subscription==prev(Subscription) , p_cost = prev(Cost,1) , p_cost=Cost)\\r\\n| project   Subscription , SubscriptionName , TimeGenerated , Cost , p_cost , cost_diff=Cost-p_cost, cost_pctdiff=round((Cost/p_cost)*100-100,1)\\r\\n| sort by cost_diff desc\\r\\n\\r\\n\",\"size\":0,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Subscription\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"Cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"p_cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"orange\"}},{\"columnMatch\":\"cost_diff\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"SubscriptionName\"]}}},\"conditionalVisibility\":{\"parameterName\":\"ComparisionPeriod\",\"comparison\":\"isEqualTo\",\"value\":\"Day over Day\"},\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{usagetimerangeraw} \\r\\n| where TimeGenerated < startofday(now())\\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| summarize Cost=round(sum(Cost),4) by MeterCategory ,   Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s, TimeGenerated \\r\\n| sort by Subscription ,MeterCategory ,  TimeGenerated asc\\r\\n| serialize\\r\\n|  extend  p_cost = iff( MeterCategory==prev(MeterCategory), p_cost = prev(Cost,1) , p_cost=Cost)\\r\\n| project  MeterCategory,  Subscription , SubscriptionName , TimeGenerated=datetime_add('hour',-1*{timeoffset},TimeGenerated) , Cost , p_cost , cost_diff=Cost-p_cost, cost_pctdiff=round((Cost/p_cost)*100-100,1)\\r\\n| where Cost <> 0  and p_cost <> 0  \\r\\n| where cost_diff  <> 0\\r\\n| sort by cost_diff desc\\r\\n\\r\\n\",\"size\":0,\"title\":\"Cost Diff DoD by Resource\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Subscription\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"Cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"p_cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"yellow\"}},{\"columnMatch\":\"cost_diff\",\"formatter\":8,\"formatOptions\":{\"palette\":\"redDark\"}},{\"columnMatch\":\"cost_pctdiff\",\"formatter\":0,\"formatOptions\":{},\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}}]}},\"conditionalVisibility\":{\"parameterName\":\"ComparisionPeriod\",\"comparison\":\"isEqualTo\",\"value\":\"Day over Day\"},\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{usagetimerangeraw} \\r\\n| where TimeGenerated < startofday(now())\\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| summarize Cost=round(sum(Cost),4) by MeterCategory , ResourceId,  Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s, TimeGenerated \\r\\n| sort by Subscription ,ResourceId,MeterCategory ,  TimeGenerated asc\\r\\n| serialize\\r\\n|  extend  p_cost = iff(ResourceId==prev(ResourceId) and MeterCategory==prev(MeterCategory), p_cost = prev(Cost,1) , p_cost=Cost)\\r\\n| project  MeterCategory,ResourceId,  Subscription , SubscriptionName , TimeGenerated=datetime_add('hour',-1*{timeoffset},TimeGenerated) , Cost , p_cost , cost_diff=Cost-p_cost, cost_pctdiff=round((Cost/p_cost)*100-100,1)\\r\\n| where Cost <> 0  and p_cost <> 0  \\r\\n| where cost_diff  <> 0\\r\\n| sort by cost_diff desc\\r\\n\\r\\n\",\"size\":0,\"title\":\"Cost Diff DoD by Resource\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Subscription\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"Cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"p_cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"yellow\"}},{\"columnMatch\":\"cost_diff\",\"formatter\":8,\"formatOptions\":{\"palette\":\"redDark\"}},{\"columnMatch\":\"cost_pctdiff\",\"formatter\":0,\"formatOptions\":{},\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}}]}},\"conditionalVisibility\":{\"parameterName\":\"ComparisionPeriod\",\"comparison\":\"isEqualTo\",\"value\":\"Day over Day\"},\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\" AzureUsage_CL   \\r\\n | where TimeGenerated {TimeRange}  \\r\\n | where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n | where Type_s == \\\"Microsoft.Consumption/usageDetails\\\" \\r\\n | summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s  \\r\\n | extend EoW=datetime_add('hour',-1*{timeoffset},endofweek(TimeGenerated))\\r\\n | summarize Cost=round(sum(PretaxCost_d),4) , Usage=sum(UsageQuantity_d) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s, AccountName_s, Currency_s,ConsumedService_s,Product_s , EoW\\r\\n | project TimeGenerated , ResourceId=InstanceId_s, MeterId_g ,Subscription=SubscriptionGuid_g,SubscriptionName_s,AccountName_s, Currency_s,ConsumedService_s,Product_s,Location=InstanceLocation_s , Cost, Usage ,EoW\\r\\n  | join kind=leftouter (AzureUsage_CL  \\r\\n  | where TimeGenerated {TimeRange}  \\r\\n  | where Type_s == \\\"Microsoft.Commerce/UsageAggregate\\\" \\r\\n  | summarize c=count() by  MeterId_g , MeterCategory_s , MeterSubCategory_s, MeterName_s ) on MeterId_g\\r\\n   | extend MeterCategory=iff(isnotempty( MeterCategory_s), MeterCategory_s, tostring(split(Product_s,'-')[0]))\\r\\n| sort by Subscription ,ResourceId,MeterId_g,Product_s,  EoW asc\\r\\n| serialize\\r\\n|  extend  p_cost = iff(ResourceId==prev(ResourceId) and MeterId_g==prev(MeterId_g), p_cost = prev(Cost,1) , p_cost=Cost)\\r\\n| project  ResourceId,  Subscription , SubscriptionName_s , EoW ,MeterId_g,Product_s, Cost , p_cost , cost_diff=Cost-p_cost, cost_pctdiff=(Cost/p_cost)*100-100\\r\\n| sort by cost_diff desc\\r\\n\\r\\n\\r\\n\",\"size\":0,\"title\":\"Cost Diff WoW\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Subscription\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"MeterId_g\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"Cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"p_cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"yellow\"}},{\"columnMatch\":\"cost_diff\",\"formatter\":8,\"formatOptions\":{\"palette\":\"redDark\"}},{\"columnMatch\":\"cost_pctdiff\",\"formatter\":0,\"formatOptions\":{},\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}}]}},\"conditionalVisibility\":{\"parameterName\":\"ComparisionPeriod\",\"comparison\":\"isEqualTo\",\"value\":\"Week over Week\"},\"name\":\"WoW\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AzureUsage_CL\\r\\n| where iff( {TimeRange:start}<=ago(60d) , TimeGenerated >= startofmonth({TimeRange:start}),TimeGenerated >= startofmonth(datetime_add('month',-2, now())))\\r\\n| extend EoM=datetime_add('hour',-1*{timeoffset},endofmonth(TimeGenerated))\\r\\n| summarize arg_max(PretaxCost_d, *) by  TimeGenerated, InstanceId_s,MeterId_g, Name_g,SubscriptionGuid_g,SubscriptionName_s,  InstanceLocation_s \\r\\n| where SubscriptionGuid_g in ({subscription}) or '*' in ({subscription})\\r\\n| summarize Cost=round(sum(PretaxCost_d),4) by InstanceId_s, InstanceName_s ,MeterId_g,Product_s, Subscription=SubscriptionGuid_g , SubscriptionName=SubscriptionName_s, EoM\\r\\n| sort by Subscription ,InstanceName_s,MeterId_g,Product_s,  EoM asc\\r\\n| serialize\\r\\n|  extend  p_cost = iff(InstanceId_s==prev(InstanceId_s) and MeterId_g==prev(MeterId_g), p_cost = prev(Cost,1) , p_cost=Cost)\\r\\n| project  InstanceId_s, InstanceName_s, Subscription , SubscriptionName , EoM ,MeterId_g,Product_s, Cost , p_cost , cost_diff=Cost-p_cost, cost_pctdiff=(Cost/p_cost)*100-100\\r\\n| sort by cost_diff desc\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":0,\"title\":\"Cost Diff MoM\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"InstanceName_s\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"Subscription\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"MeterId_g\",\"formatter\":5,\"formatOptions\":{}},{\"columnMatch\":\"Cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":1}}},{\"columnMatch\":\"p_cost\",\"formatter\":4,\"formatOptions\":{\"palette\":\"yellow\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":1}}},{\"columnMatch\":\"cost_diff\",\"formatter\":8,\"formatOptions\":{\"palette\":\"redDark\"}},{\"columnMatch\":\"cost_pctdiff\",\"formatter\":0,\"formatOptions\":{},\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}}],\"labelSettings\":[{\"columnId\":\"InstanceId_s\",\"label\":\"Resource\"},{\"columnId\":\"InstanceName_s\"},{\"columnId\":\"Subscription\"},{\"columnId\":\"SubscriptionName\"},{\"columnId\":\"EoM\"},{\"columnId\":\"MeterId_g\"},{\"columnId\":\"Product_s\",\"label\":\"Meter Details\"},{\"columnId\":\"Cost\"},{\"columnId\":\"p_cost\"},{\"columnId\":\"cost_diff\"},{\"columnId\":\"cost_pctdiff\"}]}},\"conditionalVisibility\":{\"parameterName\":\"ComparisionPeriod\",\"comparison\":\"isEqualTo\",\"value\":\"Month Over Month\"},\"name\":\"MOM\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedtab\",\"comparison\":\"isEqualTo\",\"value\":\"2\"},\"name\":\"UsageTrends\"}],\"isLocked\":false,\"defaultResourceIds\":[\"/subscriptions/2de20a16-20c6-41af-82cd-bceb39195d1c/resourceGroups/rg-shared-sc-weu/providers/Microsoft.OperationalInsights/workspaces/la-prod-sc-weu\",\"Azure Monitor\"],\"fallbackResourceIds\":[\"/subscriptions/2de20a16-20c6-41af-82cd-bceb39195d1c/resourceGroups/rg-shared-sc-weu/providers/Microsoft.OperationalInsights/workspaces/la-prod-sc-weu\",\"Azure Monitor\"]}",
            "version": "1.0",
        "sourceId": "[variables('workbookSourceId')]",
        "category": "[variables('workbookType')]"
      }
    }
    ],
    "outputs": {}
}